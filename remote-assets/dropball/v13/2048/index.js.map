{"version":3,"sources":["assets/2048/Ball.js","assets/2048/BgFull.js","assets/2048/Count.js","assets/2048/main_game_control.js"],"names":["arrColor","cc","Class","extends","Component","properties","itemFrames","default","type","SpriteAtlas","coin","_coin","numIndex","radius","isAlive","status","LbNumber","Label","animBoom","Prefab","soundBoom","AudioClip","onBeginContact","contact","selfCollider","otherCollider","this","game","explosive","anim","instantiate","x","node","y","scale","parent","KhungNode","enableSound","audioEngine","playEffect","destroy","doubleCoin","_n","toString","indexOf","parseInt","replace","setCoin","n","arrOri","_k","nI","Math","round","length","colorI","refreshSize","getChildByName","getComponent","Sprite","spriteFrame","getSpriteFrame","MotionStreak","color","Color","fromHEX","pow","floor","string","len","fontSize","Date","getTime","_scale","crN","nextBall","stroke","getCoin","parentScale","resizeBG","frameSize","view","getFrameSize","bgW","originWidth","bgH","originHeight","width","height","newDesignSize","size","setContentSize","start","on","onDestroy","off","countUp","_from","_to","_tmp","_countTo","_countFrom","_countTemplate","countTo","_duration","arguments","_countDuration","_countTime","_countStep","_countRunning","onLoad","LabelNode","update","dt","TESTMODE","BestScore","ballPre","Node","MoveNode","LineNode","BoomNode","CoinPre","X2Node","StringWin","HowPlayNode","DarkNode","DangerLine","NextLevelNode","LevelProgess","NextNode","GameOverNode","LbScrore","LbCoin","LbBest","LbNumBoom","LbNumX2","LbDebug","ButtonX2","ButtonBoom","CancelBoom","CancelX2","_canMove","sdkBoxEnable","gameName","newBall","_t","childs","children","warnLine","countOver","countBall","i","isValid","name","ballPro","_y","log","gameOver","active","ball","_lastRandomBall","randomBalls","__testrandomindex","random","CurrentBall","BallRadius","clickButton","event","k","_this","detectRestart","_lastTimeTouch","setSoundEnable","NumBoom","tween","to","removeComponent","RigidBody","easing","call","sdkbox","PluginAdMob","isAvailable","waitingAd","show","NumX2","showDebugLog","_canClickContinue","saveGame","afterPlayAd","GameScore","sys","localStorage","setItem","opacity","delay","director","getPhysicsManager","enabled","newGame","_v","_this2","tag","ball1","ball2","mainBall","dellBall","abs","linearVelocity","newCoin","max","eatingBall","boom","scheduleOnce","_delCoin","target","animNewRank","pauseContact","winString","_i","_this3","str","_isAnimMultiWin","_multiWinCallback","setNextBall","nT","push","ballNext","PhysicsCircleCollider","_touchEnd","_this4","_type","RigidBodyType","Dynamic","countWinTurn","renderNumFree","countLevelBalls","_this5","_min","min","apply","_score","countLevelEats","Tween","stopAllByTarget","find","_crLevel","GameCoin","_crWinTurn","_isAnimNewRank","_isAnimNewLevel","_crScore","animNewLevel","_newLevelCallback","_this6","_coinEarn","Ribbon","Level","Coin","BtnCont","NumCoin","_this7","_next","_oldNext","LightNode","aBall","zIndex","angle","shakeKhung","child2s","ballPro2","_newRankCallback","removeItem","dataGame","_this8","_ballStart","NextBall","Balls","c","checkMyWeb","isNative","location","host","_gameCache","arr","JSON","stringify","_this9","MH","_hasNewVersion","_newGameScene","runScene","cache","restart","_this10","console","newX","getDelta","tweenMove","repeatForever","sequence","by","then","tweenRotate","tweenAnim","adConfig","revite","banner","nextlevel","x2","admobInit","_this11","getItem","parse","_soundEn","_bestSc","checkNewVersion","countTouchOpenTest","startTouchOpenTest","_delay","EVENT_SHOW","isMobile","self","setListener","adViewDidReceiveAd","adViewDidFailToReceiveAdWithError","msg","adViewWillPresentScreen","adViewDidDismissScreen","adViewWillDismissScreen","adViewWillLeaveApplication","init","isTest","_countTry","_domainUrl","_domainUrl2","getBundleVersion","_url","botAlert","httpGet","response","obj","config","crVersion","url","version","assetManager","loadBundle","err","bundle","loadScene","err2","scene"],"mappings":"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","sourcesContent":["var arrColor = [\"f43c3d\", \"3cf4f3\", \"f33cf4\", \"3c3df4\", \"f4973c\", \"3df43c\", \"3a96ef\", \"f4f33c\", \"f43c98\", \"3cf497\", \"973cf4\", \"96f13b\"];\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        itemFrames: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        coin: 0,\n        _coin: 0,\n        numIndex: 0,\n        radius: 64,\n        isAlive: true,\n        status: 0,\n        LbNumber: cc.Label,\n        animBoom: cc.Prefab,\n        soundBoom: {\n            default: null,\n            type: cc.AudioClip\n        }\n    },\n    onBeginContact(contact, selfCollider, otherCollider){\n        if( this.game ) this.game.onBeginContact(contact, selfCollider, otherCollider);\n    },\n\n    explosive(){\n        var anim = cc.instantiate(this.animBoom);\n        anim.x = this.node.x;\n        anim.y = this.node.y;\n        anim.scale = this.node.scale;\n        anim.parent = this.game.KhungNode;\n\n        if( this.game && this.game.enableSound ) cc.audioEngine.playEffect(this.soundBoom, false);\n\n        this.node.destroy();\n        // cc.tween(this.node).to(0.2,{opacity: 0, scale: this.node.scale*2}).call(()=>{\n        // }).start();\n    },\n    doubleCoin(){\n        if( !this.isAlive ) return;\n\n        var _n = 2*this.coin;\n        if( _n.toString().indexOf(\"1024\") != -1 ){\n            _n = parseInt(_n.toString().replace(\"1024\", \"1000\"));\n        }\n\n        this.setCoin(_n);\n    },\n    setCoin(n){\n        // 2  4  8  16  32  64  128  256  512  1K\n        // 2K 4K 8K 16K 32K 64K 128K 256K 512K 1M\n\n        if( n.toString().indexOf(\"1024\") != -1 ){\n            n = parseInt(n.toString().replace(\"1024\", \"1000\"));\n        }\n\n        this.coin = n;\n        this._coin = n;\n\n        var colors = 12; // count color\n\n        var arrOri = [2,4,8,16,32,64,128,256,512,1000];\n\n        var _k = 0; // indexOf n\n\n        var nI = n;\n        while( nI > 1000 ){\n            nI = Math.round(nI/1000);\n            _k += arrOri.length;\n        }\n\n        _k += arrOri.indexOf(nI);\n        // var _k = Math.round( Math.log2(n) - 1 );\n        var colorI = _k%colors;\n\n        this.refreshSize();\n\n        this.node.getChildByName(\"Ball\").getComponent(cc.Sprite).spriteFrame = this.itemFrames.getSpriteFrame(\"ball-\"+colorI);\n        this.getComponent(cc.MotionStreak).color = new cc.Color().fromHEX(\"#\"+arrColor[colorI]);\n\n        var _n = n+\"\";\n        if( n>=Math.pow(10, 24) ){\n            _n = Math.floor(n/Math.pow(10, 24)) + \"Y\";\n        }else if( n>=Math.pow(10, 21) ){\n            _n = Math.floor(n/Math.pow(10, 21)) + \"Z\";\n        }else if( n>=Math.pow(10, 18) ){\n            _n = Math.floor(n/Math.pow(10, 18)) + \"E\";\n        }else if( n>=Math.pow(10, 15) ){\n            _n = Math.floor(n/Math.pow(10, 15)) + \"P\";\n        }else if( n>=Math.pow(10, 12) ){\n            _n = Math.floor(n/Math.pow(10, 12)) + \"T\";\n        }else if( n>=Math.pow(10, 9) ){\n            _n = Math.floor(n/Math.pow(10, 9)) + \"G\";\n        }else if( n>=Math.pow(10, 6) ){\n            _n = Math.floor(n/Math.pow(10, 6)) + \"M\";\n        }else if( n>= Math.pow(10, 3) ){\n            _n = Math.floor(n/Math.pow(10, 3)) + \"K\";\n        }\n\n        this.LbNumber.string = _n;\n\n        var len = _n.length;\n        if( len === 1 ) this.LbNumber.fontSize = 32;\n        else if( len === 2 ) this.LbNumber.fontSize = 28;\n        else if( len === 3 ) this.LbNumber.fontSize = 23;\n        else if( len === 4 ) this.LbNumber.fontSize = 18;\n\n        this.numIndex = new Date().getTime();\n    },\n    refreshSize(){\n        if( !this.isAlive ) return;\n        var _scale = 1;\n        if( this.game ){\n            var crN = this.game.nextBall;\n            while(crN>this.coin){\n                if( crN.toString().indexOf(\"1000\") != -1 ){\n                    crN = parseInt( crN.toString().replace(\"1000\", \"1024\") );\n                }\n                crN = Math.round(crN/2);\n                _scale -= 0.04;            \n            }\n            _scale += 0.04;\n        }\n\n        // this.node.width = 128*_scale;\n        // this.node.height = 128*_scale;\n        // this.getComponent(cc.PhysicsCircleCollider).radius = 128/2*_scale;\n        // this.getComponent(cc.PhysicsCircleCollider).apply();\n        this.node.scale = _scale;\n        this.radius = 128/2*_scale;\n        this.getComponent(cc.MotionStreak).stroke = 128*_scale;\n    },\n    getCoin(){\n        return this.coin;\n    }\n});\n// friction    ma sat\n// restitution dan hoi\n// density     ty trong\n","cc.Class({\n    extends: cc.Component,\n    properties: {\n        parentScale: false\n    },\n    resizeBG(){\n        var frameSize = cc.view.getFrameSize();\n        var bgW = this.originWidth, bgH = this.originHeight;\n        var scale = 1;\n        if( this.parentScale ){\n            scale = this.node.parent.scale;\n        }\n\n        if(bgW/bgH > frameSize.width / frameSize.height){\n            var height = bgW * frameSize.height / frameSize.width;\n            var width = height * bgW / bgH;\n            var newDesignSize = cc.size(width/scale, height/scale);\n            this.node.setContentSize(newDesignSize);\n        }else{\n            var width = bgH * frameSize.width / frameSize.height;\n            var height = width * bgH / bgW;\n            var newDesignSize = cc.size(width/scale, height/scale);\n            this.node.setContentSize(newDesignSize);\n        }\n    },\n    start(){\n        this.originWidth = this.node.width;\n        this.originHeight = this.node.height;\n        this.resizeBG();\n        cc.view.on(\"canvas-resize\", this.resizeBG, this);\n    },\n    onDestroy(){\n        cc.view.off(\"canvas-resize\", this.resizeBG, this);\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n    countUp(_from, _to, _tmp){\n        this._countTo = _from;\n        this._countFrom = _from;\n        if( _tmp ) this._countTemplate = _tmp;\n        this.countTo(_to, 0.5);\n    },\n    countTo(_to, _duration){\n        if( arguments.length === 3 ) this._countTo = arguments[2];\n        if( _to === this._countTo ) return;\n        this._countFrom = this._countTo;\n        this._countTo = _to;\n        this._countDuration = _duration || 1;\n        this._countTime = 0;\n        this._countStep = (this._countTo - this._countFrom)/this._countDuration;\n        this._countRunning = true;\n    },\n    onLoad(){\n        this._countRunning = false;\n        this._countFrom = 0;\n        this._countTo = 0;\n        this._countStep = 1;\n        this._countDuration = 1;\n        this._countTime = 0;\n        this._countTemplate = \"%n\";\n\n        this.LabelNode = this.getComponent(cc.Label);\n    },\n    update(dt){\n        if( this._countRunning === false ) return;\n        this._countTime += dt;\n        if( this._countTime > this._countDuration ){\n            this._countRunning = false;\n\n            this.LabelNode.string = this._countTemplate.replace(\"%n\", Math.round(this._countTo)); //.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\n            this._countRunning = false;\n        }else{\n            this.LabelNode.string = this._countTemplate.replace(\"%n\", Math.round(this._countFrom + this._countStep*this._countTime)); //.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\n        }\n    }\n});","////////// revite banner nextlevel boom x2\n// App         ca-app-pub-1164930556483127~1304757828\n// Home Banner ca-app-pub-1164930556483127/2110379519 banner\n// Level Up    ca-app-pub-1164930556483127/8983937298 interstitial\n// Revite      ca-app-pub-1164930556483127/1412090103 rewarded_video\n// Boom        ca-app-pub-1164930556483127/7370885993 rewarded_video\n// X2          ca-app-pub-1164930556483127/1926987622 rewarded_video\n\n// Test Banner   ca-app-pub-3940256099942544/6300978111\n// Test LevelUp  ca-app-pub-3940256099942544/1033173712\n// 0f42f\n// 2K 1K 512 256 128 64 32 16 8 4 2\nvar TESTMODE = false;\nvar BestScore = 2000;   // diem cao nhat\nvar NumLevelScore = 64; // diem de tang level\nvar StartRank = 256;\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        ballPre: cc.Prefab,\n        KhungNode: cc.Node,\n        MoveNode: cc.Node,\n        LineNode: cc.Node,\n        BoomNode: cc.Node,\n        CoinPre: cc.Node,\n        X2Node: cc.Node,\n        StringWin: cc.Node,\n        HowPlayNode: cc.Node,\n        DarkNode: cc.Node,\n        DangerLine: cc.Node,\n        NextLevelNode: cc.Node,\n        LevelProgess: cc.Node,\n        NextNode: cc.Node,\n        GameOverNode: cc.Node,\n        LbScrore: cc.Label,\n        LbCoin: cc.Label,\n        LbBest: cc.Label,\n        LbNumBoom: cc.Label,\n        LbNumX2: cc.Label,\n        LbDebug: cc.Label,\n        ButtonX2: cc.Node,\n        ButtonBoom: cc.Node,\n        CancelBoom: cc.Node,\n        CancelX2: cc.Node,\n        _canMove: false,\n        sdkBoxEnable: false,\n        nextBall: 2000,\n        gameName: \"2048\"\n    },\n    newBall(_t){\n        // boom 4, x2 5\n        // remove Old\n        var childs = this.KhungNode.children;\n        var warnLine = false,\n            countOver = 0,\n            countBall = 0;\n\n        for( var i=0; i<childs.length; i++ ){\n            if( cc.isValid(childs[i]) && childs[i].name === \"Ball\" ){\n                var ballPro = childs[i].getComponent(\"Ball\");\n                if( ballPro ){\n                    if( ballPro.status === 1 ) childs[i].destroy();\n                    else if( ballPro.status === 2 ){\n                        countBall++;\n                        var _y = childs[i].y+ballPro.radius;\n                        if( _y > 850 ){\n                            warnLine = true;\n                            if( _y > 940 ){\n                                countOver++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if( TESTMODE && countBall > 5 ){\n            cc.log(\"countBall\", countBall);\n            this.gameOver();\n            return;\n        }\n\n        if( countOver > 1 ){\n            this.gameOver();\n            return;\n        }\n\n        if( countBall > 0 ) this.DangerLine.active = warnLine; // lan dau khong an line\n\n        this.ButtonX2.active = true;\n        this.ButtonBoom.active = true;\n        //\n        var ball = null;\n        if( _t === 4 ){\n            ball = cc.instantiate(this.BoomNode);\n        }else if( _t === 5 ){\n            ball = cc.instantiate(this.X2Node);\n        }else{\n            ball = cc.instantiate(this.ballPre);\n        }\n\n        var ballPro = ball.getComponent(\"Ball\");\n\n        ball.name = \"Ball\";\n        ball.active = true;\n        ball.parent = this.KhungNode;\n        ballPro.status = 1;\n        ballPro.game = this;\n\n        if( _t === 4 ){\n            this.ButtonBoom.active = false;\n        }else if( _t === 5 ){\n            this.ButtonX2.active = false;\n        }else{\n            var n = 2;\n            if( _t === 1 ) n = this._lastRandomBall;\n            else{\n                if( this.randomBalls && this.randomBalls.length ){\n                    if( TESTMODE ){\n                        if( !this.__testrandomindex ) this.__testrandomindex = 0;\n                        n = this.randomBalls[this.__testrandomindex];\n                        this.__testrandomindex++;\n                        if( this.__testrandomindex >= this.randomBalls.length ) this.__testrandomindex = 0;\n                    }else{\n                        n = this.randomBalls[Math.floor(Math.random() * this.randomBalls.length)];\n                    }\n                }\n            }\n\n            ballPro.setCoin(n);\n            this._lastRandomBall = n;\n        }\n\n        ball.x = 360;\n        ball.y = 1050 - ballPro.radius; // 1050\n\n        this.CurrentBall = ball;\n        this.BallRadius = ballPro.radius;\n        this._canMove = true;\n\n        this.LineNode.active = true;\n        this.LineNode.x = ball.x - 360;\n    },\n    clickButton(event, k){\n        this.detectRestart();\n        this._lastTimeTouch = new Date().getTime();\n        switch(k){\n            case \"SoundOn\":\n                this.setSoundEnable(true);\n                break;\n            case \"SoundOff\":\n                this.setSoundEnable(false);\n                break;\n            case \"Boom\":\n                if( !this._canMove ) return;\n\n                if( this.NumBoom > 0 ){\n                    if( this.CurrentBall && this.CurrentBall.getComponent(\"Ball\").status === 1 ){\n                        cc.tween(this.CurrentBall).to(0.3, {scale: 0}).start();\n                    }\n\n                    var anim = cc.instantiate(this.BoomNode);\n                    anim.removeComponent(cc.RigidBody);\n                    anim.x = 110;\n                    anim.y = 165;\n                    anim.scale = 0.5;\n                    anim.parent = this.KhungNode;\n                    anim.active = true;\n\n                    this._canMove = false;\n                    this.LineNode.active = false;\n\n                    cc.tween(anim).to(0.25, {scale: 1.2}, {easing: \"cubicOut\"}).to(0.25, {scale: 0.8}, {easing: \"cubicIn\"}).start();\n                    cc.tween(anim).to(0.5, {x: 360, y: 1020}).call(()=>{\n                        anim.destroy();\n                        this.newBall(4);\n                    }).start();\n                }else{\n                    if(this.sdkBoxEnable && sdkbox.PluginAdMob.isAvailable(\"boom\") ){\n                        this.waitingAd = \"boom\";\n                        sdkbox.PluginAdMob.show('boom');\n                    }else{\n                        this.waitingAd = null;\n                    }\n                }\n                break;\n            case \"X2\":\n                if( !this._canMove ) return;\n\n                if( this.NumX2 > 0 ){\n                    if( this.CurrentBall && this.CurrentBall.getComponent(\"Ball\").status === 1 ){\n                        cc.tween(this.CurrentBall).to(0.3, {scale: 0}).start();\n                    }\n\n                    var anim = cc.instantiate(this.X2Node);\n                    anim.removeComponent(cc.RigidBody);\n                    anim.x = 598;\n                    anim.y = 162;\n                    anim.scale = 0.5;\n                    anim.parent = this.KhungNode;\n                    anim.active = true;\n\n                    this._canMove = false;\n                    this.LineNode.active = false;\n\n                    cc.tween(anim).to(0.25, {scale: 1.2}, {easing: \"cubicOut\"}).to(0.25, {scale: 0.8}, {easing: \"cubicIn\"}).start();\n                    cc.tween(anim).to(0.5, {x: 360, y: 1020}).call(()=>{\n                        anim.destroy();\n                        this.newBall(5);\n                    }).start();\n                }else{\n                    if(this.sdkBoxEnable && sdkbox.PluginAdMob.isAvailable(\"x2\") ){\n                        this.waitingAd = \"x2\";\n                        sdkbox.PluginAdMob.show('x2');\n                    }else{\n                        this.waitingAd = null;\n                    }\n\n                    if( this.sdkBoxEnable ){\n                        if( sdkbox.PluginAdMob.isAvailable(\"x2\") ){\n                            this.showDebugLog(\"x2 okkkkk\");\n                        }else{\n                            this.showDebugLog(\"x2 nooooooooo\");\n                        }\n                    }\n                }\n                break;\n            case \"CancelX2\":\n                this._canMove = false;\n                this.LineNode.active = false;\n                this.CurrentBall.destroy();\n\n                var anim = cc.instantiate(this.X2Node);\n                anim.removeComponent(cc.RigidBody);\n                anim.x = 360;\n                anim.y = 1020;\n                anim.scale = 0.8;\n                anim.parent = this.KhungNode;\n                anim.active = true;\n\n                cc.tween(anim).to(0.25, {scale: 1.2}, {easing: \"cubicOut\"}).to(0.25, {scale: 0.8}, {easing: \"cubicIn\"}).start();\n                cc.tween(anim).to(0.5, {x: 598, y: 162}).call(()=>{\n                    anim.destroy();\n                    this.newBall(1);\n                }).start();\n                break;\n            case \"CancelBoom\":\n                this._canMove = false;\n                this.LineNode.active = false;\n                this.CurrentBall.destroy();\n\n                var anim = cc.instantiate(this.BoomNode);\n                anim.removeComponent(cc.RigidBody);\n                anim.x = 360;\n                anim.y = 1020;\n                anim.scale = 0.8;\n                anim.parent = this.KhungNode;\n                anim.active = true;\n\n                cc.tween(anim).to(0.25, {scale: 1.2}, {easing: \"cubicOut\"}).to(0.25, {scale: 0.8}, {easing: \"cubicIn\"}).start();\n                cc.tween(anim).to(0.5, {x: 110, y: 165}).call(()=>{\n                    anim.destroy();\n                    this.newBall(1);\n                }).start();\n                break;\n            case \"SkipNextLevel\":\n                // Tab to continue\n                if( !this._canClickContinue ) return;\n                this.saveGame();\n                this._canClickContinue = false;\n\n                this.waitingAd = \"nextlevel\";\n                if(this.sdkBoxEnable && sdkbox.PluginAdMob.isAvailable(\"nextlevel\") ) sdkbox.PluginAdMob.show('nextlevel');\n                else this.afterPlayAd();\n\n                break;\n            case \"Revite\":\n                // Game Over -> revite\n                this.waitingAd = \"revite\";\n                if(this.sdkBoxEnable && sdkbox.PluginAdMob.isAvailable(\"revite\")) sdkbox.PluginAdMob.show('revite');\n                else this.afterPlayAd();\n\n                break;\n            case \"GameOver\":\n                // GameOver -> No,thank\n                //save score, new game\n                if( this.GameScore > BestScore ){\n                    BestScore = this.GameScore;\n                    cc.sys.localStorage.setItem(\"BestScore\", BestScore);\n                    this.LbBest.string = \"BEST : \"+BestScore;\n                }\n                //\n                cc.tween(this.DarkNode).to(0.4, {opacity: 0}).start();\n                cc.tween(this.GameOverNode).to(0.5, {opacity: 0}).delay(0.5).call(()=>{\n                    this.DarkNode.active = false;\n                    this.GameOverNode.active = false;\n                    cc.director.getPhysicsManager().enabled = true;\n\n                    this.MoveNode.active = true;\n                    this.newGame();\n                }).start();\n                break;\n        }\n    },\n    setSoundEnable(_t){\n        this.enableSound = _t;\n\n        var _v = 0;\n        if( _t === true ){\n            this.node.parent.getChildByName(\"sound-on\").active = true;\n            this.node.parent.getChildByName(\"sound-off\").active = false;\n            _v = 1;\n        }else{\n            this.node.parent.getChildByName(\"sound-on\").active = false;\n            this.node.parent.getChildByName(\"sound-off\").active = true;\n        }\n\n        cc.sys.localStorage.setItem(\"enableSound\", _v);\n    },\n    onBeginContact(contact, selfCollider, otherCollider){\n        if( selfCollider.tag === 2 && otherCollider.tag === 2 ){ // ball vs ball\n            var ball1 = selfCollider.getComponent(\"Ball\"),\n                ball2 = otherCollider.getComponent(\"Ball\");\n            // need status = 2\n            if( ball1 && ball2 && ball1._coin === ball2._coin && ball1.numIndex > ball2.numIndex && ball1.isAlive && ball2.isAlive && ball1.status === 2 && ball2.status === 2 ){\n                var mainBall = null,\n                    dellBall = null;\n\n                if(ball1.node.y>ball2.node.y+3){\n                    mainBall = ball2;\n                    dellBall = ball1;\n                }else if(ball2.node.y>ball1.node.y+3){\n                    mainBall = ball1;\n                    dellBall = ball2;\n                }else if( Math.abs(ball1.getComponent(cc.RigidBody).linearVelocity.x) > Math.abs( ball2.getComponent(cc.RigidBody).linearVelocity.x ) ){\n                    mainBall = ball2;\n                    dellBall = ball1;\n                }else{\n                    mainBall = ball1;\n                    dellBall = ball2;\n                }\n\n                var newCoin = 2* Math.max(ball1.coin, ball2.coin);\n                if( newCoin.toString().indexOf(\"1024\") != -1 ){\n                    newCoin = parseInt( newCoin.toString().replace(\"1024\", \"1000\") );\n                }\n                mainBall._coin = newCoin;\n\n                this.eatingBall(Math.max(ball1.coin, ball2.coin));\n\n                dellBall.isAlive = false;\n                dellBall.getComponent(cc.RigidBody).destroy();\n\n                cc.tween(dellBall.node).to(0.08,{x: mainBall.node.x, y: mainBall.node.y}).call(()=>{\n                    dellBall.explosive();\n                    if(cc.isValid(mainBall.node)) mainBall.doubleCoin();\n                    else cc.log(\"not found! why?\")\n                }).start();\n            }\n        }else if( selfCollider.tag === 4 ){ // boom\n            var boom = selfCollider.getComponent(\"Ball\");\n            var mainBall = otherCollider.getComponent(\"Ball\");\n\n            if( boom && boom.isAlive ){\n                if( otherCollider.tag === 0 ){ // vs wall\n                    this.scheduleOnce(()=>{\n                        if( boom.isAlive ){\n                            boom.isAlive = false;\n                            boom.explosive();\n                        }\n                    }, 1);\n                }else if(otherCollider.tag === 2 && mainBall && mainBall.isAlive){ // vs ball\n                    boom.isAlive = false;\n                    mainBall.isAlive = false;\n\n                    boom.getComponent(cc.RigidBody).destroy();\n                    var _delCoin = mainBall._coin;\n\n                    cc.tween(boom.node).to(0.08,{x: mainBall.node.x, y: mainBall.node.y}).call(()=>{\n                        var childs = this.KhungNode.children,\n                            _t = 1;\n                        for( var i=0; i<childs.length; i++ ){\n                            if( childs[i].name === \"Ball\" ){\n                                var ballPro = childs[i].getComponent(\"Ball\");\n                                if( ballPro.status === 2 && ballPro.isAlive && ballPro._coin === _delCoin ){\n                                    ballPro.isAlive = false;\n                                    cc.tween(childs[i]).delay(_t*0.1).call((target)=>{\n                                        target.getComponent(\"Ball\").explosive();\n                                    }).start();\n                                    _t++;\n                                }\n                            }\n                        }\n\n                        boom.node.destroy();\n                        mainBall.explosive();\n                    }).start();\n                }\n            }\n        }else if( selfCollider.tag === 5 ){ //x2\n            var boom = selfCollider.getComponent(\"Ball\");\n            var mainBall = otherCollider.getComponent(\"Ball\");\n            if( boom && boom.isAlive ){\n                if( otherCollider.tag === 0 ){\n                    this.scheduleOnce(()=>{\n                        if( boom.isAlive ){\n                            boom.isAlive = false;\n                            boom.explosive();\n                        }\n                    }, 1);\n                }else if(otherCollider.tag === 2 && mainBall && mainBall.isAlive){ // vs ball\n                    boom.isAlive = false;\n                    boom.getComponent(cc.RigidBody).destroy();\n\n                    var newCoin = 2* mainBall.coin;\n                    if( newCoin.toString().indexOf(\"1024\") != -1 ){\n                        newCoin = parseInt( newCoin.toString().replace(\"1024\", \"1000\") );\n                    }\n\n                    this.eatingBall(mainBall.coin);\n\n                    mainBall._coin = newCoin;\n\n                    cc.tween(boom.node).to(0.08,{x: mainBall.node.x, y: mainBall.node.y}).call(()=>{\n                        boom.explosive();\n                        if(cc.isValid(mainBall.node)) mainBall.doubleCoin();\n                        else cc.log(\"not found! why?\")\n                    }).start();\n\n                    if( newCoin >= this.nextBall ){\n                        this.MoveNode.active = false;\n                        this.LineNode.opacity = 0;\n                        this.scheduleOnce(()=>{\n                            this.animNewRank();\n                        }, 1);\n                    }\n                }\n            }\n        }\n    },\n    pauseContact(_t){\n        cc.director.getPhysicsManager().enabled = !_t;\n    },\n    winString(_i){\n        // 1 - 4\n        // y: -440 -> 90\n        if( _i > 2 ){\n            // 3: 1|2\n            // 4: 3\n            // 5: 4 \n            var _t = 0;\n            if( _i >= 5 ) _t = 4;\n            else if( _i == 4 ) _t = 3;\n            else{\n                // _i = rand 1-2-3\n                _t = Math.random() > 0.5 ? 1 : 2;\n                // if( !this.randomStringWin ) this.randomStringWin = 1;\n                // this.randomStringWin++;\n                // if( this.randomStringWin > 3 ) this.randomStringWin = 1;\n                // _i = this.randomStringWin;\n            }\n\n            var str = this.StringWin.getChildByName(\"T\"+_t);\n            if( str ){\n                this._isAnimMultiWin = true;\n\n                str.y = -440;\n                str.opacity = 0;\n                str.scale = 0.4;\n                str.active = true;\n                cc.tween(str).to(0.3, {y: 90, opacity: 255, scale: 1}, {easing: \"cubicOut\"}).delay(0.7).to(0.3, {opacity: 0, y: 440}).call(()=>{\n                    str.active = false;\n                    this._isAnimMultiWin = false;\n                    if( this._multiWinCallback ) this._multiWinCallback();\n                    this._multiWinCallback = null;\n                }).start();\n            }\n        }\n    },\n    setNextBall(n){\n        this.nextBall = n;\n\n        var arrOri = [2,4,8,16,32,64,128,256,512,1000];\n        var _k = 0; // indexOf n\n        var nI = n;\n        while( nI > 1000 ){\n            nI = Math.round(nI/1000);\n            _k += arrOri.length;\n        }\n\n        _k += arrOri.indexOf(nI);\n\n        this.randomBalls = [];\n        var nT = n;\n        for( var i=0; i<10; i++ ){\n            if( nT.toString().indexOf(\"1000\") != -1 ){\n                nT = parseInt( nT.toString().replace(\"1000\", \"1024\") );\n            }\n            nT = Math.round(nT/2);\n            if( nT < 2 ) break;\n            else if( i >= 4 ){\n                this.randomBalls.push( nT );\n            }\n        }\n\n        if( this.randomBalls.length < 4 ){\n            this.randomBalls.push( 2*this.randomBalls[0] );\n        }\n\n        // this.randomBalls = [2,4,8,16,32,64,128];\n        if( TESTMODE ){\n            this.randomBalls = [4000, 2000, 1000,512, 256, 128, 64, 32, 16, 16, 8, 4, 2];\n            if( this.nextBall != this.randomBalls[0] *2 ){\n                this.setNextBall(this.randomBalls[0] *2);\n                return;\n            }\n        }\n\n        if( !this.CurrentBall || this.randomBalls.indexOf(this.CurrentBall.getComponent(\"Ball\").coin) == -1 ){\n            this.newBall();\n        }\n\n        var childs = this.KhungNode.children;\n        for( var i=0; i<childs.length; i++ ){\n            if( childs[i].name === \"Ball\" && childs[i].getComponent(\"Ball\").status === 3 ){\n                childs[i].destroy();\n            }\n        }\n        var ballNext = cc.instantiate(this.ballPre);\n        ballNext.x = -1;\n        ballNext.y = -102;\n        ballNext.removeComponent(cc.PhysicsCircleCollider);\n        ballNext.removeComponent(cc.RigidBody);\n        ballNext.getComponent(\"Ball\").setCoin(n);\n        ballNext.getComponent(\"Ball\").status = 3;\n        ballNext.getComponent(\"Ball\").game = this;\n        ballNext.parent = this.NextNode;\n\n        this.ballNext = ballNext;\n\n        ballNext.scale = 0.7;\n    },\n    _touchEnd(){\n        this.detectRestart();\n\n        this._lastTimeTouch = new Date().getTime();\n\n        if( !this._canMove ) return;\n\n        this.saveGame();\n\n        cc.director.getPhysicsManager().enabled = true;\n        this._canMove = false;\n        this.LineNode.active = false;\n        var ball = this.CurrentBall;\n        var ballPro = this.CurrentBall.getComponent(\"Ball\");\n        ballPro.status = 2;\n\n        var _type = ballPro.getComponent(cc.PhysicsCircleCollider).tag;\n        if( _type === 4 ){\n            this.NumBoom--;\n        }else if( _type === 5 ){\n            this.NumX2--;\n        }\n\n        this.CurrentBall.getComponent(cc.RigidBody).type = cc.RigidBodyType.Dynamic;\n\n        this.countWinTurn = 0;\n\n        this.ButtonBoom.active = true;\n        this.ButtonX2.active = true;\n\n        this.renderNumFree();\n\n        this.scheduleOnce(()=>{\n            // if( cc.isValid(ball) && ballPro && ballPro.isAlive ) ballPro.getComponent(cc.PhysicsCircleCollider).restitution = 0;\n            this.newBall();\n        }, 1);\n\n        this.countLevelBalls++;\n    },\n    eatingBall(_coin){\n        var _min = Math.min(...this.randomBalls);\n        var _score = 0;\n        while( _min < _coin ){\n            _min = _min*2;\n            if( _min.toString().indexOf(\"1024\") != -1 ){\n                _min = parseInt( _min.toString().replace(\"1024\", \"1000\") );\n            }\n            _score++;\n        }\n\n        if( _score > 0 ){\n            this.countLevelEats ++;\n            this.countWinTurn++;\n        }\n\n        cc.Tween.stopAllByTarget(cc.find(\"Mask/progess\", this.LevelProgess));\n        var _crLevel = Math.floor(this.GameScore/NumLevelScore);\n\n        this.GameScore += _score;\n        this.LbScrore.string = this.GameScore;\n        this.LbCoin.getComponent(cc.Label).string = Math.min(9999, this.GameCoin);\n\n        if( !this._isAnimMultiWin ){ // check MultiWin\n            cc.log(\"this.countWinTurn\", this.countWinTurn);\n            if(this.countWinTurn > 2){\n                this._isAnimMultiWin = true;\n                var _crWinTurn = this.countWinTurn;\n                this.scheduleOnce(()=>{\n                    if( !this._isAnimNewRank && !this._isAnimNewLevel ){\n                        this.winString( Math.max(_crWinTurn, this.countWinTurn) );\n                        cc.log(\"max\",Math.max(_crWinTurn, this.countWinTurn) );\n                    }\n                    this.countWinTurn = 0;\n                    this._isAnimMultiWin = false;\n                }, 0.5);\n            }\n        }\n\n        // progess x -205 -25\n        var _crScore = this.GameScore % NumLevelScore;\n        if( !this._isAnimNewLevel ){\n            if( _crLevel < Math.floor(this.GameScore/NumLevelScore) ){\n                // new level\n                this._isAnimNewLevel = true;\n    \n                this.LevelProgess.getChildByName(\"End\").active = true;\n                this.LevelProgess.getChildByName(\"NextLevel\").color = new cc.Color(163,98,0);\n                cc.find(\"Mask/progess\", this.LevelProgess).x = 0;\n\n                this.MoveNode.active = false;\n                this._canMove = false;\n\n                this.scheduleOnce(()=>{\n                    this.animNewLevel(); // co the play ko nghi ngoi !\n                }, 0.5);\n            }\n        }\n\n        if( !this._isAnimNewRank ){ // check \n            var newCoin = 2*_coin;\n            if( newCoin.toString().indexOf(\"1024\") != -1 ){\n                newCoin = parseInt( newCoin.toString().replace(\"1024\", \"1000\") );\n            }\n\n            if( newCoin >= this.nextBall ){\n                cc.log(\"has new rank\");\n                this._isAnimNewRank = true;\n\n                this.MoveNode.active = false;\n                this.LineNode.opacity = 0;\n\n                this.scheduleOnce(()=>{\n                    if( this._isAnimNewLevel ){\n                        this._newLevelCallback = ()=>{\n                            this.animNewRank();\n                        };\n                    }else{\n                        this.animNewRank();\n                    }\n                }, 0.6);\n            }\n        }\n\n        if( !this._isAnimNewLevel ){\n            this.LevelProgess.getChildByName(\"End\").active = false;\n            this.LevelProgess.getChildByName(\"NextLevel\").color = new cc.Color(255,255,255);\n            cc.tween(cc.find(\"Mask/progess\", this.LevelProgess)).to(0.2, {x: -205+180*_crScore/NumLevelScore}).start();\n\n            this.LevelProgess.getChildByName(\"CurrLevel\").getComponent(cc.Label).string = _crLevel;\n            this.LevelProgess.getChildByName(\"NextLevel\").getComponent(cc.Label).string = _crLevel+1;\n        }\n    },\n    animNewLevel(){\n        if( !this._isAnimNewLevel ) return;\n        cc.log(\"call animNewLevel\");\n        cc.director.getPhysicsManager().enabled = false;\n        this.MoveNode.active = false;\n        this._canMove = false;\n\n        this._canClickContinue = true;\n\n        this._coinEarn = Math.min(10, Math.floor(10*this.countLevelEats/this.countLevelBalls));\n        this.countLevelEats = 0;\n        this.countLevelBalls = 0;\n        //\n        this.NextLevelNode.active = true;\n        this.NextLevelNode.opacity = 255;\n\n        var Ribbon = this.NextLevelNode.getChildByName(\"Ribbon\"),\n            Level = this.NextLevelNode.getChildByName(\"Level\"),\n            Coin = this.NextLevelNode.getChildByName(\"Coin\"),\n            BtnCont = this.NextLevelNode.getChildByName(\"Continue\"),\n            NumCoin = Coin.getChildByName(\"Num\");\n\n        Level.active = false;\n        Coin.active = false;\n        BtnCont.active = false;\n        Ribbon.active = true;\n        this.DarkNode.active = true;\n        Level.getChildByName(\"Num\").getComponent(cc.Label).string = Math.max(Math.floor(this.GameScore/NumLevelScore)-1, 0);\n        NumCoin.getComponent(cc.Label).string = \"+0\";\n\n        this.DarkNode.opacity = 0; // max 190\n        Ribbon.opacity = 0;\n        Ribbon.y = 45; // 305  45\n\n        cc.tween(this.DarkNode).to(0.3,{opacity: 190}).start();\n\n        cc.tween(Ribbon).to(0.3,{opacity: 255}).delay(1).call(()=>{\n            Level.active = true;\n            // Level.y = 305;\n            Level.opacity = 0;\n            cc.tween(Level).to(0.3, {opacity: 255}).call(()=>{\n                Level.getChildByName(\"Num\").getComponent(cc.Label).string = Math.floor(this.GameScore/NumLevelScore);\n            }).delay(0.5).call(()=>{\n                Coin.active = true;\n                Coin.opacity = 0;\n                cc.tween(Coin).delay(1).to(0.3, {opacity: 255}).delay(0.5).call(()=>{\n                    NumCoin.getComponent(\"Count\").countUp(0, this._coinEarn, \"+%n\");\n                }).delay(2).call(()=>{\n                    BtnCont.active = true;\n                }).start();\n            }).start();\n        }).to(0.3,{y: 305}).start();\n    },\n    animNewRank(){\n        cc.log(\"finist Level\");\n        this.MoveNode.active = false;\n        this.LineNode.opacity = 0;\n\n        var _next = this.nextBall*2;\n        if( _next.toString().indexOf(\"1024\") != -1 ){\n            _next = parseInt( _next.toString().replace(\"1024\", \"1000\") );\n        }\n\n        var _oldNext = this.nextBall;\n\n        this.nextBall = _next; // set for render size\n\n        var LightNode = this.KhungNode.getChildByName(\"Light\");\n        LightNode.active = false\n        LightNode.scale = 1;\n        LightNode.x = 360;\n        LightNode.y = 840;\n        // this.ballNext.active = true;\n\n        this._isAnimNewRank = true;\n\n        var aBall = false;\n\n        var childs = this.KhungNode.children;\n        for( var i=0; i<childs.length; i++ ){\n            if( childs[i].name === \"Ball\" ){\n                var ballPro = childs[i].getComponent(\"Ball\");\n                if( ballPro.status === 2 && ballPro.isAlive ){\n                    if( ballPro.coin === _oldNext ){\n                        if( aBall === false ){\n                            ballPro.getComponent(cc.RigidBody).destroy();\n                            childs[i].zIndex = 99;\n                            cc.tween(childs[i])\n                                .to(0.5,{x:360, y: 840, scale: 1, angle: 0}, {easing: \"cubicOut\"})\n                                .call(()=>{\n                                    // LightNode.active = true;\n                                    // cc.tween(LightNode).to(0.3, {scale: 1}).start();\n                                })\n                                .delay(1.8)\n                                .call((target)=>{\n                                    LightNode.active = false;\n                                    cc.tween(target).to(0.6, {x: 540}, {easing: \"cubicOut\"}).to(0.4, {x:360, scale: 0.7}, {easing: \"cubicIn\"}).start();\n                                })\n                                .to(1, {y: 144})\n                                .call((target)=>{\n                                    target.getComponent(\"Ball\").explosive();\n                                    this.setNextBall(_next);\n                                    this.shakeKhung();\n\n                                    this.MoveNode.active = true;\n                                    this.LineNode.opacity = 255;\n                                    // this.ballNext.getComponent(\"Ball\").doubleCoin();\n                                    // remove small ball\n                                    var _t = 1;\n                                    var child2s = this.KhungNode.children;\n                                    for( var i=0; i<child2s.length; i++ ){\n                                        if( child2s[i].name === \"Ball\" ){\n                                            var ballPro2 = child2s[i].getComponent(\"Ball\");\n                                            if( ballPro2.status === 1 ){\n                                                if( ballPro2._coin < Math.min(...this.randomBalls) ) this.newBall();\n                                            }else if( ballPro2.isAlive && ballPro2._coin < Math.min(...this.randomBalls) ){\n                                                ballPro2.isAlive = false;\n                                                cc.tween(child2s[i]).delay(_t*0.1).call((target)=>{\n                                                    target.getComponent(\"Ball\").explosive();\n                                                }).start();\n                                                _t++;\n                                            }\n                                        }\n                                    }\n\n                                    this._isAnimNewRank = false;\n                                    if(this._newRankCallback) this._newRankCallback();\n                                    this._newRankCallback = null;\n                                })\n                                .start();\n                        }\n                        aBall = true;\n                    }else{\n                        ballPro.refreshSize();\n                    }\n                }\n            }\n        }\n\n        if(aBall === false){ // co the da vuot qua max\n            var child2s = this.KhungNode.children;\n            for( var i=0; i<child2s.length; i++ ){\n                if( child2s[i].name === \"Ball\" ){\n                    var ballPro2 = child2s[i].getComponent(\"Ball\");\n                    if( ballPro2 &&  ballPro2.isAlive && ballPro2.status === 2 && _next < ballPro2.coin *2 ){\n                        _next = ballPro2.coin *2;\n                    }\n                }\n            }\n\n            if( _next.toString().indexOf(\"1024\") != -1 ){\n                _next = parseInt( _next.toString().replace(\"1024\", \"1000\") );\n            }\n\n            this.setNextBall(_next);\n\n            this.MoveNode.active = true;\n            this.LineNode.opacity = 255;\n            // this.ballNext.getComponent(\"Ball\").doubleCoin();\n            // remove small ball\n            var _t = 1;\n            for( var i=0; i<child2s.length; i++ ){\n                if( child2s[i].name === \"Ball\" ){\n                    var ballPro2 = child2s[i].getComponent(\"Ball\");\n                    if( ballPro2.status === 1 ){\n                        if( ballPro2._coin < Math.min(...this.randomBalls) ) this.newBall();\n                    }else if( ballPro2.isAlive && ballPro2._coin < Math.min(...this.randomBalls) ){\n                        ballPro2.isAlive = false;\n                        cc.tween(child2s[i]).delay(_t*0.1).call((target)=>{\n                            target.getComponent(\"Ball\").explosive();\n                        }).start();\n                        _t++;\n                    }\n                }\n            }\n\n            this._isAnimNewRank = false;\n            if(this._newRankCallback) this._newRankCallback();\n            this._newRankCallback = null;\n        }\n    },\n    gameOver(){\n        cc.sys.localStorage.removeItem(\"gameCache\");\n\n        cc.director.getPhysicsManager().enabled = false;\n        this.MoveNode.active = false;\n        this._canMove = false;\n\n        this.GameOverNode.active = true;\n        this.GameOverNode.opacity = 0;\n        this.DarkNode.active = true;\n        this.DarkNode.opacity = 0;\n\n        this.GameOverNode.getChildByName(\"Score\").getComponent(cc.Label).string = this.GameScore;\n        this.GameOverNode.getChildByName(\"Best\").getComponent(cc.Label).string = BestScore;\n\n        cc.tween(this.DarkNode).to(0.5, {opacity: 190}).start();\n        cc.tween(this.GameOverNode).to(0.5, {opacity: 255}).start();\n    },\n    newGame(dataGame){\n        var _ballStart = StartRank;\n\n        var childs = this.KhungNode.children;\n        for( var i=0; i<childs.length; i++ ){\n            if( childs[i].name === \"Ball\" ) childs[i].destroy();\n        }\n        this.CurrentBall = null;\n\n        if( dataGame ){\n            this.NumX2 = dataGame.NumX2;\n            this.NumBoom = dataGame.NumBoom;\n            this.GameScore = dataGame.GameScore;\n            this.GameCoin = dataGame.GameCoin;\n            this.nextBall = dataGame.NextBall;\n            _ballStart = dataGame.NextBall;\n            // render balls\n            if( dataGame.Balls && dataGame.Balls.length ){\n                for( var i=0; i<dataGame.Balls.length; i++ ){\n                    var ball = cc.instantiate(this.ballPre);\n                    var ballPro = ball.getComponent(\"Ball\");\n                    ball.name = \"Ball\";\n                    ball.active = true;\n                    ball.x = dataGame.Balls[i].x;\n                    ball.y = dataGame.Balls[i].y;\n                    ball.parent = this.KhungNode;\n                    ballPro.status = 2;\n                    ballPro.game = this;\n                    ballPro.setCoin(dataGame.Balls[i].c);\n                    ball.getComponent(cc.RigidBody).type = cc.RigidBodyType.Dynamic;\n                    // ball.getComponent(cc.PhysicsCircleCollider).restitution = 0;\n                }\n            }\n\n            cc.log(dataGame);\n        }else{\n            this.NumX2 = 3;\n            this.NumBoom = 3;\n            this.GameScore = 0;\n            this.GameCoin = 0;\n        }\n\n        this.randomBalls = [];\n\n        this.countWinTurn = 0;\n\n        this.countLevelBalls = 0;\n        this.countLevelEats = 0;\n\n        this._isAnimMultiWin = false;\n        this._isAnimNewRank = false;\n        this._isAnimNewLevel = false;\n\n        this._multiWinCallback = null;\n        this._newRankCallback = null;\n        this._newLevelCallback = null;\n\n        this.DangerLine.active = true;\n\n        this.MoveNode.active = true;\n        this._canMove = true;\n\n        \n\n        cc.director.getPhysicsManager().enabled = true;\n\n        this.renderNumFree();\n\n        this.eatingBall(0); // reset view\n\n        this.scheduleOnce(()=>{\n            this.setNextBall(_ballStart); // min next = 2K\n        }, 0.3);\n    },\n    checkMyWeb(){\n        if( !cc.sys.isNative && location && location.host.indexOf(\"198.211.107\") == -1 && location.host.indexOf(\"localhost\") == -1 && location.host.indexOf(\"192.168.0\") == -1 ){\n            var childs = this.node.parent.children;\n            for( var i=0; i<childs.length; i++ ){\n                childs[i].destroy();\n            }\n            this.node.destroy();\n        }\n        if( cc.sys.isNative ){\n            TESTMODE = false;\n        }\n    },\n    renderNumFree(){\n        if( this.NumX2 > 0 ){\n            this.LbNumX2.string = this.NumX2;\n            this.LbNumX2.node.active = true;\n            this.LbNumX2.node.parent.getChildByName(\"playvid\").active = false;\n        }else{\n            this.NumX2 = 0;\n            this.LbNumX2.node.active = false;\n            this.LbNumX2.node.parent.getChildByName(\"playvid\").active = true;\n        }\n\n        if( this.NumBoom > 0 ){\n            this.LbNumBoom.string = this.NumBoom;\n            this.LbNumBoom.node.active = true;\n            this.LbNumBoom.node.parent.getChildByName(\"playvid\").active = false;\n        }else{\n            this.NumBoom = 0;\n            this.LbNumBoom.node.active = false;\n            this.LbNumBoom.node.parent.getChildByName(\"playvid\").active = true;\n        }\n    },\n    saveGame(){\n        this._gameCache.NumX2 = this.NumX2;\n        this._gameCache.NumBoom = this.NumBoom;\n        this._gameCache.GameScore = this.GameScore;\n        this._gameCache.GameCoin = this.GameCoin;\n        this._gameCache.NextBall = this.nextBall;\n\n        var childs = this.KhungNode.children;\n        var arr = [];\n        for( var i=0; i<childs.length; i++ ){\n            if( childs[i].name === \"Ball\" ){\n                var ballPro = childs[i].getComponent(\"Ball\");\n                if( ballPro && ballPro.status === 2 && ballPro.isAlive ){\n                    arr.push({c: ballPro.coin, x: childs[i].x, y: childs[i].y});\n                }\n            }\n        }\n        this._gameCache.Balls = arr;\n        \n        cc.sys.localStorage.setItem( \"gameCache\", JSON.stringify(this._gameCache));\n    },\n    shakeKhung(){\n        // 360 723.324\n        // var target = this.node.parent.getChildByName(\"BgKhung\");\n        // cc.tween(target).to(0.05,{x: 370, y: 733}).to(0.05,{x: 350, y: 713}).to(0.05,{x: 360, y: 723}).start(); //.to(0.05,{x: 370})\n    },\n    afterPlayAd(){\n        var _type = null;\n        switch(this.waitingAd){\n            case \"revite\":\n                _type = \"revite\";\n                // destroy all ball, add New\n                cc.tween(this.DarkNode).to(0.4, {opacity: 0}).start();\n                cc.tween(this.GameOverNode).to(0.5, {opacity: 0}).delay(0.5).call(()=>{\n                    this.DarkNode.active = false;\n                    this.GameOverNode.active = false;\n\n                    var childs = this.KhungNode.children,\n                        _t = 1;\n                    for( var i=childs.length-1; i>=0; i-- ){\n                        if( childs[i].name === \"Ball\" ){\n                            var ballPro = childs[i].getComponent(\"Ball\");\n                            if( ballPro.status === 2 && ballPro.isAlive ){\n                                ballPro.isAlive = false;\n                                cc.tween(childs[i]).delay(_t*0.1).call((target)=>{\n                                    target.getComponent(\"Ball\").explosive();\n                                }).start();\n                                _t++;\n                            }\n                        }\n                    }\n\n                    this.scheduleOnce(()=>{\n                        cc.director.getPhysicsManager().enabled = true;\n                        this.MoveNode.active = true;\n                        this.newBall();\n                    }, _t*0.1+0.5);\n                }).start();\n                break;\n            case \"nextlevel\":\n                _type = \"nextlevel\";\n                // anim coin then\n                for( var i=0; i<10; i++ ){\n                    var coin = cc.instantiate(this.CoinPre);\n                    coin.active = true;\n                    coin.x = 30.259;\n                    coin.y = -70.146;\n                    coin.parent = this.KhungNode.parent;\n                    // y 700-900 x 360-600\n                    // .to(0.2, {x: Math.random()*(600-360)+360, y: Math.random()*(900-700)+700},{easing: \"quadOut\"})\n                    // {x: 687, y: 1234}\n                    // cc.tween(coin).delay(0.02*i).to(0.2, {x: Math.random()*(687-360)+360},{easing: \"quadOut\"}).to(0.2, {x:687},{easing: \"quadIn\"}).start();\n                    cc.tween(coin).delay(0.1*i).to(0.4, {x: 687-360, y: 1234-611.222}).call((target)=>{\n                        target.destroy();\n                    }).start();\n                }\n\n                this.NextLevelNode.getChildByName(\"Coin\").getChildByName(\"Num\").getComponent(\"Count\").countTo(0);\n                this.GameCoin += this._coinEarn;\n                this.LbCoin.getComponent(\"Count\").countTo(Math.min(9999, this.GameCoin));\n\n                this.scheduleOnce(()=>{\n                    cc.tween(this.DarkNode).to(0.3, {opacity: 0}).call(()=>{\n                        this.DarkNode.active = false;\n                    }).start();\n                    cc.tween(this.NextLevelNode).to(0.3, {opacity: 0}).call(()=>{\n                        this.NextLevelNode.active = false;\n                    }).start();\n\n                    // this.DarkNode.active = false;\n                    // this.NextLevelNode.active = false;\n\n                    this.MoveNode.active = true;\n                    this._canMove = true;\n\n                    this._isAnimNewLevel = false;\n\n                    cc.director.getPhysicsManager().enabled = true;\n\n                    this.eatingBall(0);\n\n                    if( this._newLevelCallback ){\n                        this._newLevelCallback();\n                        this._isAnimNewLevel = null;\n                        this._newLevelCallback = null;\n                    }else{\n                        if( MH._hasNewVersion && this._newGameScene ){\n                            cc.director.runScene(this._newGameScene);\n                        }\n                    }\n                }, 0.5 +1); // 0.5 coin move\n                break;\n            case \"boom\":\n                _type = \"boom\";\n                this.NumBoom = 1;\n                this.clickButton(null, \"Boom\");\n                break;\n            case \"x2\":\n                _type = \"x2\";\n                this.NumX2 = 1;\n                this.clickButton(null, \"X2\");\n                break;\n        }\n        this.waitingAd = null;\n\n        if( _type && this.sdkBoxEnable ){\n            sdkbox.PluginAdMob.cache(_type);\n        }\n    },\n    detectRestart(){\n        if( this._lastTimeTouch > 0 ){\n            var _now = new Date().getTime();\n            if( _now - this._lastTimeTouch > 900000 ){\n                cc.game.restart();\n            }\n        }\n    },\n    onLoad () {\n        // cc.sys.localStorage.setItem(\"2048VERSION\", \"xxx\");\n        console.log(\"scene game\");\n        this._lastTimeTouch = 0; // new Date().getTime();\n\n        this._gameCache = {\n            NumX2: 0,\n            NumBoom: 0,\n            GameScore: 0,\n            GameCoin: 0,\n            NextBall: 256,\n            Balls: [], // {coin, x, y}\n        };\n\n        cc.director.getPhysicsManager().enabled = true;\n        // this.newGame();\n\n        this.MoveNode.on(\"touchstart\", ()=>{\n            if( this._canMove ){\n                this.HowPlayNode.active = false;\n            }\n        },this);\n\n        this.MoveNode.on(\"touchmove\", (event)=>{\n            if( !this._canMove || !cc.isValid(this.CurrentBall) ) return;\n            // 98 - 620\n            var newX = this.CurrentBall.x + 3*event.getDelta().x;\n\n            if( newX < 98+this.BallRadius ) newX = 98+this.BallRadius;\n            else if( newX > 620 - this.BallRadius ) newX = 620-this.BallRadius;\n\n            this.CurrentBall.x = newX;\n            this.LineNode.x = newX-360;\n\n        },this);\n\n        this.MoveNode.on(\"touchend\", this._touchEnd,this);\n\n        this.MoveNode.on(\"touchcancel\", this._touchEnd,this);\n\n        // 150 - 600\n        var tweenMove = cc.tween().repeatForever(cc.tween().sequence(cc.tween().by(1, {x: -450}, {easing: 'sineOut'}).delay(1), cc.tween().by(1, {x: 450}, {easing: 'sineOut'}).delay(1)));\n        cc.tween(this.HowPlayNode).then(tweenMove).start();\n\n        //\n        var tweenRotate = cc.tween().repeatForever(cc.tween().sequence(cc.tween().to(2, {angle: 6}), cc.tween().to(2, {angle: -6})));\n        cc.tween(this.NextNode).then(tweenRotate).start();\n\n\n        // 755 - 682\n        var tweenAnim = cc.tween().repeatForever(cc.tween().to(1, {y: 718-611.222}).call((target)=>{\n            target.y = 755-611.222;\n        }));\n        cc.tween(this.LineNode).then(tweenAnim).start();\n\n        //\n        cc.tween(this.KhungNode.getChildByName(\"Light\")).by(1, {angle: -180}).repeatForever().start();\n        //\n        cc.tween(this.DangerLine).then(cc.tween().repeatForever(cc.tween().sequence(cc.tween().to(0.3, {opacity: 0}),cc.tween().to(0.3, {opacity: 255})))).start();\n\n        this.checkMyWeb();\n\n        // this.schedule(()=>{\n        //     if( this._canMove && this.MoveNode.active ) this._touchEnd();\n        // }, 1);\n\n        this.waitingAd = null;\n        this.adConfig = {\n            revite: false,\n            banner: false,\n            nextlevel: false,\n            boom: false,\n            x2: false\n        };\n        this.admobInit();\n    },\n    start(){\n        var dataGame = cc.sys.localStorage.getItem(\"gameCache\");\n        if( dataGame ) dataGame = JSON.parse(dataGame);\n        cc.sys.localStorage.removeItem(\"gameCache\"); // remove after first read\n\n        var _soundEn = cc.sys.localStorage.getItem(\"enableSound\");\n        if( \"1\" === _soundEn || \"0\" !== _soundEn ){\n            this.setSoundEnable(true);\n        }else{\n            this.setSoundEnable(false);\n        }\n\n        var _bestSc = cc.sys.localStorage.getItem(\"BestScore\");\n        if( _bestSc ) BestScore = Math.max( BestScore, parseInt(_bestSc) );\n        this.LbBest.string = \"BEST : \"+BestScore;\n        this.newGame(dataGame);\n\n        this.checkNewVersion();\n\n        /// test mode\n        this.countTouchOpenTest = 0;\n        this.startTouchOpenTest = 0;\n        this.LbCoin.node.parent.on(\"touchstart\", ()=>{\n            this.countTouchOpenTest++;\n            this.startTouchOpenTest = new Date().getTime();\n        }, this);\n        this.LbCoin.node.parent.on(\"touchend\", ()=>{\n            var _delay = new Date().getTime() - this.startTouchOpenTest;\n            console.log(\"countTouchOpenTest \", _delay);\n            if( _delay > 5000 && _delay < 7000 && this.countTouchOpenTest === 5 ){\n                cc.sys.localStorage.setItem(\"TestMode\", \"a100\");\n                cc.game.restart();\n            }\n        }, this);\n\n        ///\n        if( cc.sys.isNative ){\n            cc.game.on(cc.game.EVENT_SHOW,()=>{\n                this.detectRestart();\n            });\n        }\n    },\n    admobInit() {\n        if(cc.sys.isNative && cc.sys.isMobile) {\n            this.sdkBoxEnable = true;\n            var self = this;\n            // revite banner nextlevel boom x2\n            sdkbox.PluginAdMob.setListener({\n                adViewDidReceiveAd: function(name) {\n                    self.showDebugLog('adViewDidReceiveAd name=' + name);\n\n                    // cache first time\n                    if( !self.adConfig[name] ){\n                        sdkbox.PluginAdMob.cache(name);\n                        if( name === \"banner\" ){\n                            sdkbox.PluginAdMob.show('banner');\n                        }\n                    }\n\n                    self.adConfig[name] = true;\n                },\n                adViewDidFailToReceiveAdWithError: function(name, msg) {\n                    self.showDebugLog('adViewDidFailToReceiveAdWithError name=' + name + ' msg=' + msg);\n                    self.afterPlayAd();\n                },\n                adViewWillPresentScreen: function(name) {\n                    self.showDebugLog('adViewWillPresentScreen name=' + name);\n                },\n                adViewDidDismissScreen: function(name) {\n                    self.showDebugLog('adViewDidDismissScreen name=' + name);\n                    // close ad\n                    self.afterPlayAd();\n                },\n                adViewWillDismissScreen: function(name) {\n                    self.showDebugLog('adViewWillDismissScreen=' + name);\n                },\n                adViewWillLeaveApplication: function(name) {\n                    self.showDebugLog('adViewWillLeaveApplication=' + name);\n                }\n            });\n            sdkbox.PluginAdMob.init();\n        }\n    },\n    showDebugLog(_s){\n        // this.LbDebug.string += \"\\n\" + _s;\n    },\n    checkNewVersion(isTest){\n        if( MH._hasNewVersion ) return;\n        MH._hasNewVersion = false;\n        this._newGameScene = null;\n        this._countTry = 0;\n        this._domainUrl = \"https://jacobminh.github.io/remote-assets/dropball/config.json\";\n        this._domainUrl2 = \"http://198.211.107.199/remote-assets/dropball/config.json\";\n        if( isTest ){\n            this._domainUrl = this._domainUrl.replace(\"config.json\", \"config-test.json\");\n            this._domainUrl2 = this._domainUrl2.replace(\"config.json\", \"config-test.json\");\n        }\n        this.getBundleVersion();\n    },\n    getBundleVersion(){\n        this._countTry += 1;\n        var _url = this._domainUrl;\n        if( this._countTry >= 3 ){\n            _url = this._domainUrl2;\n            if( this._countTry === 3 ){\n                MH.botAlert(\"domain1-error\");\n            }\n            if( this._countTry >= 6 ){\n                MH.botAlert(\"domain2-error\");\n                return;\n            }\n        }\n\n        var self = this;\n        MH.httpGet(_url, function(response){\n            var obj = JSON.parse(response);\n            if( obj[\"act\"] ){\n                MH.config = obj;\n                var crVersion = cc.sys.localStorage.getItem(\"2048VERSION\");\n                if( obj.url && obj.version && obj.version !== crVersion ){\n                    cc.assetManager.loadBundle(obj.url+\"/2048\", {version: obj.version}, function(err, bundle){\n                        if( !err ){\n                            bundle.loadScene('Game', function (err2, scene) {\n                                if( !err2 ){\n                                    self._newGameScene = scene;\n                                    MH._hasNewVersion = true;\n                                    cc.sys.localStorage.setItem(\"2048VERSION\", MH.config.version);\n                                    cc.sys.localStorage.setItem(\"2048URL\", MH.config.url);\n                                    console.log(\"new game success\");\n                                }else{\n                                    MH.botAlert(\"load-new-gamescene-error\");\n                                }\n                            });\n                        }else{\n                            MH.botAlert(\"load-new-gamebundle-error\");\n                        }\n                    });\n                }\n            }else{\n                self.getBundleVersion();\n            }\n        }, function(){\n            self.getBundleVersion();\n        });\n    }\n});"],"file":"index.js"}